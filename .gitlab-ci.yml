image: registry.git.rwth-aachen.de/ths/smt/carl/ci:latest

cache:
  key: ${CI_JOB_NAME} #Gleicher Cache für alle Branches, Verschiedene für jeden Job
  paths:
    - build/resources/
  policy: pull-push
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG" #Verschieden für alle Branches und alle Jobs
  paths: 
    - build/*.so*
    - build/*.a*
  policy: pull-push

variables:
  DOCKER_TLS_CERTDIR: "" #do not change, needed for docker in docker (quality)


stages:
  - build-gcc
  - build-clang 
  - test
  - quality
  - documentation

build-gcc10:
  dependencies: []
  stage: build-gcc
  script:
    - export CC=/usr/bin/gcc-10 && export CXX=/usr/bin/g++-10
    - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/

build-gcc9:
  dependencies: []
  stage: build-gcc
  script:
    - export CC=/usr/bin/gcc-9 && export CXX=/usr/bin/g++-9
    - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/
  
build-gcc8:
  dependencies: []
  stage: build-gcc
  script:
    - export CC=/usr/bin/gcc-8 && export CXX=/usr/bin/g++-8
    - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/

build-clang11:
  dependencies: []
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-11 && export CXX=/usr/bin/clang++-11
     - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/

build-clang10:
  dependencies: []
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-10 && export CXX=/usr/bin/clang++-10
     - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/


build-clang9:
  dependencies: []
  stage: build-clang
  script:
     - export CC=/usr/bin/clang-9 && export CXX=/usr/bin/clang++-9
     - MAKE_PARALLEL=-j8 TASK=parallel source .ci/build.sh
  artifacts: 
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths: 
      - build/
      - cmake/
      - src/


test-clang: 
  dependencies: [build-clang11]
  stage: test
  script: 
    - cd build && make test #kein xml-output möglich?

test-gcc: 
  dependencies: [build-gcc10]
  stage: test
  script: 
    - cd build && make test #kein xml-output möglich?

code_quality:
  dependencies: []
  stage: quality
  cache: {}
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality" /code
  artifacts:
    reports: 
      codequality: gl-code-quality-report.json


docs:
  stage: documentation
  cache: {}
  script:
    - MAKE_PARALLEL=-j4 TASK=documentation source .ci/build.sh
  only:
    - master


#### UNUSED ## 
#pycarl:
#  script:
#  - MAKE_PARALLEL=-j8 TASK=pycarl source .ci/build.sh
#  only:
#    - development
#
#addons:
#  script:
#  - MAKE_PARALLEL=-j8 TASK=addons source .ci/build.sh
#  only:
#    - development
#
#make_tidy:
#  stage: tidy
#  script:
#    - MAKE_PARALLEL=-j8 TASK=tidy source .ci/build.sh