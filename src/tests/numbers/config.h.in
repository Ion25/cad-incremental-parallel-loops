/**
 * Auto generated file config.h from config.h.in.
 */

#cmakedefine USE_MPFR_FLOAT

#include "carl/interval/Interval.h"
#include "carl/util/platform.h"

#ifdef USE_CLN_NUMBERS
#include <cln/cln.h>
#elif defined(__VS)
#include <mpirxx.h>
#else
#include <gmpxx.h>
#endif
#ifdef USE_MPFR_FLOAT
#include "carl/numbers/FLOAT_T.h"
#endif

#ifdef USE_CLN_NUMBERS
typedef testing::Types<int, cln::cl_I> IntegerTypes;
typedef testing::Types<cln::cl_RA> RationalTypes;
typedef testing::Types<int, cln::cl_I, cln::cl_RA> NumberTypes;
#ifdef USE_MPFR_FLOAT
typedef testing::Types<carl::Interval<double>, carl::Interval<int>, carl::Interval<cln::cl_RA>, carl::Interval<cln::cl_I>, carl::Interval<carl::FLOAT_T<mpfr_t> > > IntervalTypes;
#else
typedef testing::Types<carl::Interval<double>, carl::Interval<int>, carl::Interval<cln::cl_RA>, carl::Interval<cln::cl_I> > IntervalTypes;
#endif
#else
typedef testing::Types<int, mpz_class> IntegerTypes;
typedef testing::Types<mpq_class> RationalTypes;
typedef testing::Types<int, mpz_class, mpq_class> NumberTypes;
#ifdef USE_MPFR_FLOAT
typedef testing::Types<carl::Interval<double>, carl::Interval<int>, carl::Interval<mpq_class>, carl::Interval<mpz_class>, carl::Interval<carl::FLOAT_T<mpfr_t> > > IntervalTypes;
#else
typedef testing::Types<carl::Interval<double>, carl::Interval<int>, carl::Interval<mpq_class>, carl::Interval<mpz_class> > IntervalTypes;
#endif
#endif